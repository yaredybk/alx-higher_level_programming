==============================
How to Use 2-matrix_divided.py
==============================

This module defines a matrix division function `matrix_divided(matrix, div)`.

Usage
=====

`matrix_divided(...)` returns a new matrix that is a copy of the parameter
`matrix` with all elements divided by `div`.

::

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
	>>> matrix = [
	... [1, 2, 3],
	... [4, 5, 6]
	... ]
	>>> print(matrix_divided(matrix, 3))
	... [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Note that quotients are rounded to a maximum of two decimal places.

The original matrix is left unchanged.

::

	>>> print(matrix)
	... [[1, 2, 3], [4, 5, 6]]

Invalid Matrices
==============

The parameter `matrix` must be a list of lists consisting of either ints or
floats. If `matrix` is not a list, a TypeError is raised.

::

	 >>> matrix = "not a list"
	 >>> print(matrix_divided(matrix, 3))
	 Traceback (most recent call last):
	 TypeError: matrix must be a matrix (list of lists) of integers/floats

::

	 >>> matrix = None
	 >>> print(matrix_divided(matrix, 3))
	 Traceback (most recent call last):
	 TypeError: matrix must be a matrix (list of lists) of integers/floats

Note that an empty list will raise the TypeError.

::

	 >>> matrix = []
	 >>> print(matrix_divided(matrix, 3))
	 Traceback (most recent call last):
	 TypeError: matrix must be a matrix (list of lists) of integers/floats
